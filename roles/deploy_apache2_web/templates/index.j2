<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>DevOps</title>
    <style>
        body {
            margin: 0;
            font-family: 'Helvetica Neue', 'Segoe UI', 'Roboto', Arial, sans-serif; /* Шрифты, похожие на macOS */
            background: linear-gradient(135deg, #4a90e2, #9013fe, #ff6f61, #f5a623);
            background-size: 400% 400%; /* Увеличиваем размер градиента для эффекта анимации */
            animation: gradientAnimation 15s ease infinite; /* Добавляем анимацию градиента */
            color: white;
            text-align: center;
            overflow: hidden;
            height: 100vh;
            display: flex;
            flex-direction: column;
            justify-content: center;
        }

        @keyframes gradientAnimation {
            0% { background-position: 0% 50%; }
            50% { background-position: 100% 50%; }
            100% { background-position: 0% 50%; }
        }

        h1 {
            font-size: 2.5em;
            margin-top: 0;
            animation: fadeIn 2s ease-in-out;
        }

        p {
            font-size: 1.2em;
            margin: 10px 0;
            animation: fadeIn 2s ease-in-out 0.5s forwards;
        }

        .skills {
            display: flex;
            justify-content: center;
            flex-wrap: wrap;
            margin-top: 20px;
        }

        .skill {
            background-color: rgba(255, 255, 255, 0.2);
            border-radius: 10px;
            padding: 10px;
            margin: 10px;
            width: 150px;
            height: 60px; 
            display: flex; 
            justify-content: center; 
            align-items: center; 
            transition: transform 0.3s, background-color 0.3s, box-shadow 0.3s;
        }

        .skill:hover {
            transform: scale(1.1);
            background-color: rgba(255, 255, 255, 0.4);
            box-shadow: 0px 4px 20px rgba(255, 255, 255, 0.5);
        }

        @keyframes fadeIn {
            from { opacity: 0; }
            to { opacity: 1; }
        }

        .button {
            display: block; 
            width: 6cm; 
            height: 1cm; 
            padding: 0; 
            margin: 20px auto; 
            background-color: #ff6f61;
            color: white;
            border-radius: 25px;
            text-decoration: none;
            line-height: 1cm; 
            transition: background-color 0.3s, transform 0.3s, box-shadow 0.3s;
        }

        .button:hover {
            background-color: #ff4c3b;
            transform: scale(1.05);
            box-shadow: 0px 4px 20px rgba(255,255,255,0.5);
        }

        #contact {
          display: none; 
          margin-top: 20px; 
          padding-top: 20px; 
          background-color: rgba(255,255,255,0.1); 
          border-radius: 10px; 
        }

        footer {
          position:absolute; 
          bottom:-10px; 
          width:100%; 
          color:#fff; 
          font-size:.8em; 
          padding-bottom:.5em; 
        }

        .weather-widget {
          position:absolute; 
          top:20px; 
          right:20px; 
          background-color: rgba(255,255,255,.2); /* Фон виджета как у кнопок */
          border-radius:10px; /* Углы как у кнопки */
          padding:15px; /* Увеличиваем отступы для большей высоты */
          color:black; /* Цвет текста черный */
          font-size:.9em; /* Шрифт как у основного сайта */
          z-index:1000; /* Чтобы виджет был поверх остальных элементов */
          display:flex;
          flex-direction:column; /* Вертикальное выравнивание элементов */
          align-items:flex-start; /* Выравнивание по левому краю */
          justify-content:center; /* Центрируем содержимое по вертикали */
          transition:.3s ease-in-out; /* Плавность при наведении */
        }

        .weather-widget img {
          max-width:50px; /* Увеличиваем максимальную ширину иконки */
          margin-bottom:.5em; /* Отступ снизу для иконки */
        }

        .weather-text {
          text-align:left; /* Выравнивание текста по левому краю */
          line-height:.9em; /* Нормальный межстрочный интервал для лучшего восприятия текста */
        }

        .weather-widget:hover {
          background-color: rgba(255,255,255,.4); /* Изменение цвета при наведении */
          box-shadow:-2px -2px 10px rgba(255,255,255,.5), inset -2px -2px rgba(255,255,255,.3); /* Эффект тени при наведении */
        }
    </style>
</head>
<body>

    <div class="weather-widget" id="weather-widget">
      <img id="weather-icon" src="" alt="Погода">
      <div class="weather-text">
         Погода в Москве<br>
         Пасмурно<br>
         Температура:<br>
         <span id="temperature">8.12</span>°C <!-- Добавляем символ Цельсия -->
      </div>
    </div>

    <h1>
      Привет!<br>
      Меня зовут Андрей.<br>
      Я Начинающий DevOps Инженер.
    </h1>
    <p>Я увлечен DevOps и стремлюсь создавать эффективные и надежные системы!</p>

    <div class="skills">
        <div class="skill">Linux</div>
        <div class="skill">Docker</div>
        <div class="skill">Ansible</div>
        <div class="skill">Git & GitHub</div>
        <div class="skill">GitLab & GitLab CI</div>
        <div class="skill">Jenkins<br>(в пр. изучения)</div>
        <div class="skill">Prometheus + Grafana</div>
        <div class="skill">Zabbix</div>
    </div>

    <a href="#" class="button" onclick="toggleContact()">Связаться со мной</a>

    <section id="contact">
        <h2>Контактная информация</h2>
        <p>Email:<br>9999999@mail.ru</p>
        <p>Телефон:<br>8-919-099-99-99</p>
    </section>

    <footer>
      <p>©2024 Все права защищены.</p>
    </footer>

    <script>
      function toggleContact() {
          const contactSection = document.getElementById('contact');
          if (contactSection.style.display === 'none' || contactSection.style.display === '') {
              contactSection.style.display = 'block';
          } else {
              contactSection.style.display = 'none';
          }
      }

      // Функция для получения погоды
      async function getWeather() {
          const city = 'Москва'; // Исправлено название города
          const weatherApiKey = 'f27d3de18a86re7871dcf4146atrrw57d779a42d'; // Ваш API ключ OpenWeatherMap
          const weatherUrl = `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${weatherApiKey}&units=metric&lang=ru`;

          try {
              const weatherResponse = await fetch(weatherUrl);
              const weatherData = await weatherResponse.json();

              // Обработка данных о погоде
              if (weatherResponse.ok) {
                  const iconCode = weatherData.weather[0].icon; // Получаем код иконки
                  const iconUrl = `https://openweathermap.org/img/wn/${iconCode}@2x.png`; // Формируем URL для иконки
                  document.getElementById('weather-icon').src = iconUrl;

                  // Обновляем текст погоды
                  document.querySelector('.weather-text').innerHTML = `
                      Погода в ${city}<br>
                      ${weatherData.weather[0].description}<br>
                      Температура:<br><span id="temperature">${weatherData.main.temp.toFixed(2)}</span>°C`;
              } else {
                  console.error('Ошибка получения данных о погоде:', weatherData);
                  document.getElementById('weather-widget').innerHTML = 'Ошибка получения данных о погоде';
              }
          } catch (error) {
              console.error('Ошибка при выполнении запроса:', error);
              document.getElementById('weather-widget').innerHTML = 'Ошибка получения данных о погоде';
          }
      }

      // Вызов функции для получения погоды
      getWeather();
    </script>

</body>
</html>
